// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  email        String  @unique
<<<<<<< HEAD
  user_name String @unique
=======
  user_name    String  @unique
>>>>>>> 934190dfff91971ab881773c0f420906e8e18be7
  name         String?
  bio          String?
  image_path   String?
  instagram    String?
  facebook     String?
<<<<<<< HEAD
=======
  password     String?
>>>>>>> 934190dfff91971ab881773c0f420906e8e18be7
  own_lists    List[]
  liked_points Point[] @relation("LikedPoints")
  liked_lists  List[]  @relation("LikedLists")
}

model List {
  id           Int      @id @default(autoincrement())
<<<<<<< HEAD
  author       User     @relation(fields: [authorId], references: [id])
=======
  author       User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
>>>>>>> 934190dfff91971ab881773c0f420906e8e18be7
  authorId     Int
  title        String
  description  String?
  image_path   String?
  createdAt    DateTime @default(now()) @map(name: "created_at")
  public       Boolean  @default(false)
  spotify_path String?
  tags         Tag[]
  points       Point[]
  liked_by     User[]   @relation("LikedLists")
}

model Point {
<<<<<<< HEAD
  id           Int     @id @default(autoincrement())
  title        String
  description  String?
  public       Boolean @default(false)
  authorId     Int
  longitude    BigInt
  latitude     BigInt
  spotify_path String?
  tags         Tag[]
  list         List    @relation(fields: [listId], references: [id])
  listId       Int
  liked_by     User[]  @relation("LikedPoints")
=======
  id           Int      @id @default(autoincrement())
  title        String
  description  String?
  public       Boolean  @default(false)
  longitude    Float
  latitude     Float
  image_paths  String[]
  spotify_path String?
  tags         Tag[]
  list         List     @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId       Int
  liked_by     User[]   @relation("LikedPoints")
>>>>>>> 934190dfff91971ab881773c0f420906e8e18be7
}

model Tag {
  id             Int     @id @default(autoincrement())
  name           String
<<<<<<< HEAD
  times_searched BigInt @default(0)
=======
  times_searched BigInt  @default(0)
>>>>>>> 934190dfff91971ab881773c0f420906e8e18be7
  points         Point[]
  lists          List[]
}
